# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  username: String!
  email: String!
  bio: String!
  display_name: String!
  profile_picture: String!
  created_at: DateTime!
  is_owner: Boolean!
  is_following: Boolean!
  following: Int!
  followers: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  id: Int!
  content: String!

  """The user who created this post"""
  user_id: String!

  """The type of category this post belongs to"""
  category_id: Int!
  created_at: DateTime!
  updated_at: DateTime
  user: User!
  user_liked: Boolean!
  likes: Int!
  category: Category!
}

type Category {
  id: Int!
  name: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
  totalEdges: Int
}

type PostEdge {
  """The node object (belonging to type Post) attached to the edge."""
  node: Post!

  """
  An opaque cursor that can be used to retrieve further pages of edges before or after this one.
  """
  cursor: String!
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge!]!
}

type Query {
  user(id: String!): User!
  post(id: Int!): Post!
  posts(
    """Retrieve page of edges by fixed offset page number."""
    page: Int

    """Retrieve page of edges before opaque cursor."""
    before: String

    """Retrieve page of edges after opaque cursor."""
    after: String

    """Retrieve first `n` edges."""
    first: Int

    """Retrieve last `n` edges."""
    last: Int
    category_id: Int
    user_id: String
  ): PostConnection!
}

type Mutation {
  follow(id: String!): User!
  unfollow(id: String!): User!
  createPost(createPostInput: CreatePostInput!): Post!
  editPost(editPostInput: EditPostInput!): Post!
  likePost(id: Int!): Post!
  unlikePost(id: Int!): Post!
  removePost(id: Int!): Post!
}

input CreatePostInput {
  content: String!
  category_id: Int!
}

input EditPostInput {
  content: String
  category_id: Int
  id: Int!
  updated_at: DateTime
}